// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
    READING
    READ
    INTERESTED
    NOT_INTERESTED
    UNKNOWN
  }

model Book {
  id          String      @id @default(uuid())
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @updatedAt
  title       String?
  rating      Int?        @default(0)
  status      Status?     @default(UNKNOWN)
  releaseDate String?
  isbn10      String?
  isbn13      String?
  characters  BookCharacters[]
  quotes      Quote[]
}

model Character {
  id          String      @id @default(uuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  name        String
  books       BookCharacters[]
  quotes      Quote[]
}

model Quote {
  id          String        @id @default(uuid())
  quoteText   String
  character   Character? @relation(fields: [characterId], references: [id])
  characterId String?
  book        Book      @relation(fields: [bookId], references:[id])
  bookId      String
}

// https://blog.reedsy.com/types-of-characters/

enum CharacterRole {
  NOT_SET
  PROTAGONIST
  ANTAGONIST
  DEUTERAGONIST
  TETRIARY
  LOVE_INTEREST
  CONFIDANT
  FOIL
}

enum CharacterType {
  NOT_SET
  DYNAMIC
  STATIC
  STOCK
  SYMBOLIC
  ROUND
}

model BookCharacters {
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  book        Book        @relation(fields:[bookId], references:[id])
  character   Character   @relation(fields:[characterId], references:[id])
  bookId      String
  characterId String
  roleInBook  CharacterRole? @default(NOT_SET)
  typeInBook  CharacterType? @default(NOT_SET)

  @@id([characterId, bookId])
}
